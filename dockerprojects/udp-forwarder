#!/usr/bin/env perl

# The smokerupdate program broadcasts updates on port 21212. Forward the
# update notifications to the docker images on the local machine.  In this
# example the docker image is listening on port 21214 (see *dockerfile and
# *install)

use strict;
use warnings;
use autodie qw(:all);
use IO::Socket::INET;
use Unix::Processors;

my $sin = IO::Socket::INET->new(LocalPort => 21212, Proto => 'udp')
	or die "Can't listen on port 21212";

my $number_of_cpus = Unix::Processors->new()->max_physical() || 1;

while(1) {
	get_dists();
}

sub get_dists {
	my @dists;

	while(1) {
		my $line;

		$sin->recv($line, 256);

		# print $line;

		last if($line eq "\n");

		push @dists, $line;
	}

	open(my $pin, '-|', '/usr/bin/docker ps');

	my @ports;
	my $line = <$pin>;
	while($line = <$pin>) {
		if($line =~ /0.0.0.0:(\d+)->\d+\/udp/) {
			push @ports, $1;
		}
	}

	close($pin);

	die "Couldn't detect any smokers\n" if(scalar(@ports) == 0);

	my $count = $number_of_cpus;;

	foreach my $port(@ports) {
		# print "Send to $port\n";
		my $sout = IO::Socket::INET->new(PeerPort => $port,
				PeerAddr => '127.0.0.1',
				Proto => 'udp')
			or die "Can't send to port $port";

		foreach my $dist(@dists) {
			$sout->send($dist);
			sleep(1);	# Ensure the remote end is ready
		}
		$sout->send("\n");

		close($sout);

		$count--;

		if($count <= 0) {
			sleep(30);
			$count = $number_of_cpus;
		}
	}
}
