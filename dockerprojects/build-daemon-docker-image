#!/usr/bin/env bash

# Usage: 'install perlversion port'
#	e.g. build-docker-image 5.29.7 21213
#	build-docker-image 5.18.2 21214 --thread

# You'll need to 'apt install socat'

# FIXME: remove temporary files on error or signal, and/or use stdin

# TODO: check if the given port is free

set -e

if [[ ! -r MyConfig.pm ]]; then
	echo 'Create MyConfig.pm. Use ~/.cpan/CPAN/MyConfig.pm as a possible template' 1>&2
	echo 'Use /home/smoker as the home directory in MyConfig.pm' 1>&2
	exit 1
fi

typeset -r PERL=${1:-5.30.1}
typeset -r PORT=${2:-21212}
typeset -r TMPDIR=${TMPDIR:-/tmp}
# Doesn't work on ARM
# typeset -r NPROC=$(grep ^cpu\\scores /proc/cpuinfo | uniq | awk '{print $4}')
typeset -r NPROC=$(grep -c ^processor /proc/cpuinfo)

shift
shift
# Use $* instead of $@ as the array is being assigned to a string
typeset -r ARGS="$*"
typeset -r HOSTNAME=$(echo smoker-${PERL}$ARGS | sed s/\\./-/g | sed s/--/-/g | sed 's/ //g').$(hostname)

if [[ $ARGS != "" ]]; then
	typeset -r NAME=perl-"$PERL"$(echo "$ARGS" | sed s/--/-/g | sed 's/ //g')
	typeset -r BUILDCMD="source ~/perl5/perlbrew/etc/bashrc && perlbrew install -j$NPROC -n perl-$PERL -Accflags='-O2 -pipe -Wall -Wextra -mtune=native -march=native' -Dusedevel $ARGS --as $NAME"
else
	typeset -r NAME="perl-$PERL"
	typeset -r BUILDCMD="source ~/perl5/perlbrew/etc/bashrc && perlbrew install -j$NPROC -n $NAME -Accflags='-O2 -pipe -Wall -Wextra -mtune=native -march=native' -Dusedevel"
fi

rm -f config.ini smokerdaemon.config.sample
ln $HOME/.cpanreporter/config.ini .
echo 'clean_after_test=1' > smokerdaemon.config.sample
# rm -f MyConfig.pm
# ln $HOME/.cpan/CPAN/MyConfig.pm .

cat > setup.$$ <<EOF
#!/usr/bin/env bash

# Install system programs needed by the smoker

set -ex

# hostname $HOSTNAME.bandsman.co.uk
export http_proxy="http://zack:3128"
export https_proxy="http://zack:3128"
# mount -o remount,rw,hidepid=2 /proc
# apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y libpam-tmpdir git procps curl build-essential libxml2-dev sqlite3 && apt-get clean && rm -rf /var/lib/apt/lists/*
apt-get update && apt-get --no-install-recommends install -y libpam-tmpdir git procps curl bzip2 bison byacc patch netbase gcc make ca-certificates autoconf libxml2-dev sqlite3 libterm-readline-perl-perl && apt-get autoremove && apt-get autoclean && apt-get clean && rm -rf /var/lib/apt/lists/*
# CPAN mount point
mkdir -p /mnt/CPAN && chmod 0 /mnt/CPAN
echo $HOSTNAME > /etc/hostname
EOF

cat > build.$$ <<EOF
#!/usr/bin/env bash

set -ex

# Install user programs needed by the smoker

curl -L https://install.perlbrew.pl | bash

export CFLAGS="-O2 -pipe -Wall -Wextra -mtune=native -march=native"
source ~/perl5/perlbrew/etc/bashrc && $BUILDCMD
rm -rf perl5/perlbrew/dists perl5/perlbrew/build perl5/perlbrew/*log smoker/dockerprojects

# perlbrew use $NAME && perl -MCPAN -e 'CPAN::Shell->install("ExtUtils::MakeMaker", "Test::Reporter::Transport::Socket", "CPAN::Reporter", "Data::Dumper")'
perlbrew use $NAME && cpan -i CPAN CPAN::Modulelist && cpan -iT ExtUtils::MakeMaker Test::Reporter::Transport::Socket CPAN::Reporter Data::Dumper
git clone https://github.com/nigelhorne/smoker.git && cd smoker/bin && ./loadall2 && ./loadall3 && ./loadall5
cpan -fiT IPC::System::Simple
cd && git clone https://github.com/nigelhorne/li.git && cd li && cc li.c && ./a.out -r0l ../perl5

# TODO
# cpancleanup
cd && rm -rf .cpan/sources/authors/id/? .cpan/build /tmp/* li smoker/dockerprojects smoker/bin/loadall? smoker/.git
# apt-get purge -y git bison byacc

EOF

cat > $TMPDIR/dockerfile <<EOF
FROM debian
LABEL Maintainer="njh@bandsman.co.uk"
LABEL Description="CPAN Smoker image"
COPY setup.$$ /tmp/setup
RUN bash /tmp/setup && rm /tmp/setup

RUN useradd -ms /bin/bash smoker
RUN apt-get -y --allow-remove-essential purge adduser e2fsprogs e2fslibs
RUN chown -R smoker /home/smoker
USER smoker
WORKDIR /home/smoker

ENV TEST_JOBS $NPROC
ENV HARNESS_OPTIONS c:j$NPROC
EXPOSE $PORT:$PORT/udp

RUN mkdir -p .cpanreporter .cpan/CPAN
COPY --chown=smoker config.ini .cpanreporter/config.ini
COPY --chown=smoker smokerdaemon.config.sample .smokerdaemonrc
COPY --chown=smoker MyConfig.pm .cpan/CPAN/MyConfig.pm
COPY --chown=smoker build.$$ build
# Stop CPAN modules trying to put stuff in the home directory
RUN bash build && rm build && chmod 500 /home/smoker

ENV PATH \$PATH::
CMD ["/bin/bash", "-c", "source perl5/perlbrew/etc/bashrc && perlbrew use $NAME && cd smoker/bin && PATH=\$PATH:: exec ./smokerdaemon -p $PORT > /tmp/smokerdaemon.out 2> /tmp/smokerdaemon.err"]
# CMD ["/bin/bash", "-c", "source perl5/perlbrew/etc/bashrc && perlbrew use $NAME && cd smoker/bin && PATH=\$PATH:: /bin/bash"]
EOF
docker build -t smoker-$NAME -f $TMPDIR/dockerfile .

rm -f $TMPDIR/dockerfile setup.$$ build.$$

# echo "run 'socat -u UDP4-RECVFROM:$PORT - | tee >(socat - UDP4:127.0.0.1:$PORT) > /dev/null'"
echo 'iptables -F DOCKER-USER'
echo 'iptables -A DOCKER-USER -s 192.168.0.0/16 -j ACCEPT'
echo 'iptables -A DOCKER-USER -d 192.168.0.0/16 -j ACCEPT'
echo 'iptables -A DOCKER-USER -d 127.0.0.0/24 -j ACCEPT'
echo 'iptables -A DOCKER-USER -s 127.0.0.0/24 -j ACCEPT'
echo 'iptables -A DOCKER-USER -j LOG --log-prefix "Blocked traffic: " --log-level 7'
echo 'iptables -A DOCKER-USER -j RETURN'
echo 'run "./udp-forwarder" if not already running"'
echo "run 'docker run --restart=always --hostname=$HOSTNAME.bandsman.co.uk --log-driver syslog --log-opt syslog-address=udp://loghost:42185 --log-opt tag=$HOSTNAME --log-opt syslog-format=rfc3164 -dt --name smoker-$NAME --mount type=bind,src=/mnt/CPAN,dst=/mnt/CPAN,readonly -p 0.0.0.0:$PORT:$PORT/udp smoker-$NAME' to start the image"
