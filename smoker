#!/usr/bin/env perl

# Author Nigel Horne: njh@bandsman.co.uk
# Copyright (C) 2015-2016, Nigel Horne

# Usage is subject to licence terms.
# The licence terms of this software are as follows:
# Personal single user, single computer use: GPL2
# All other users (including Commercial, Charity, Educational, Government)
#	must apply in writing for a licence for use from Nigel Horne at the
#	above e-mail.

# I Love App::SmokeBox::Mini, unfortunately too many of its dependancies don't
# build on many platforms, so this is a small plaything that does for me

use warnings;
use strict;

use Getopt::Std;
use LWP::Simple;

use File::HomeDir;
use File::Spec;
use lib File::Spec->catfile(File::HomeDir->my_home(), '/.cpan/CPAN');

use MyConfig;

die unless($CPAN::Config->{'test_report'});
die unless($CPAN::Config->{'urllist'});

my %opts;
getopts('i', \%opts);

my $recent;
foreach my $url(@{$CPAN::Config->{'urllist'}}) {
	$recent = get("$url/RECENT");
	if($recent) {
		print "Fetching from $url\n";
		last;
	}
}

die if(!$recent);

$ENV{'CPAN_SQLITE_NO_LOG_FILES'} = 1;
if(!$opts{'i'}) {
	$ENV{'AUTOMATED_TESTING'} = 1;
}

$| = 1;

foreach my $dist(split(/\n/, $recent)) {
	if($dist =~ /^authors\/id\/(.+)/) {
		$dist = $1;
	} else {
		next;
	}
	next if($dist =~ /\/CHECKSUMS$/);
	# $dist =~ s/\//::/g;

	print "$dist - ";
	my $rc;
	if($opts{'i'}) {
		$rc = system("perl -MCPAN -e 'CPAN::Shell->test(\"$dist\")'");
	} else {
		$rc = timed_system(300, "perl -MCPAN -e 'CPAN::Shell->test(\"$dist\")' > /dev/null 2>&1 < /dev/null");
	}
	print "returns $rc\n";
}


# http://www.perlmonks.org/?node_id=324176
sub timed_system {
	my $time = shift;

	my $pid;
 
	local $SIG {ALRM} = sub {
		kill 15, $pid or die "kill: $!";
		die "Timeout!"
	}; # Just SIGTERM.
 
	eval {
		$pid = fork;
 
		die "Fork failed: $!" unless defined $pid;
 
		unless ($pid) {
			exec @_;
			die "Exec failed: $!";
		}
 
		alarm $time;
 
		waitpid $pid => 0;
	};
	die $@ if $@ && $@ !~ /^Timeout!/;
}
