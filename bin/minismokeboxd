#!/usr/bin/env bash

if [ x$TMPDIR = 'x' ]; then
	if [[ -d $HOME/tmp ]]; then
		export TMPDIR=$HOME/tmp
	else
		export TMPDIR=/tmp
	fi
fi

PIDFILE=${TMPDIR}/cpan-test.pid
if test -s ${PIDFILE} && kill -0 `cat ${PIDFILE}`; then
	echo "Already running"
	exit 0
fi

# make sure the lockfile is removed when we exit and then claim it
trap "rm -f ${PIDFILE}; exit" INT TERM ALRM EXIT
echo $$ > ${PIDFILE}

ulimit -d 393216

export CPAN_SQLITE_NO_LOG_FILES=1 AUTOMATED_TESTING=1 PERL_MM_USE_DEFAULT=1

if [ -d /var/www/mirrors/CPAN ]; then
	# CPAN=file:///var/www/mirrors/CPAN/
	CPAN=http://localhost/mirrors/CPAN/
elif [ -d /var/www/html/mirrors/CPAN ]; then
	# CPAN=file:///var/www/html/mirrors/CPAN/
	CPAN=http://localhost/mirrors/CPAN/
elif [ -d /mnt/CPAN ]; then
	CPAN=file:///mnt/CPAN/
else
	CPAN=http://cpan.metacpan.org/
fi

# TODO: add ionice -3 where supported

# See http://searchco.de/codesearch/view/17183976

if [ $1x == x ]; then
	LIST=`perlbrew list`
else
	LIST=$*
fi

while true; do
	mv $HOME/.cpan/build $HOME/.cpan/Obuild
	chmod -R 777 $HOME/.cpan/Obuild &&
	mkdir -p $HOME/.cpan/build &&
	rm -rf $HOME/.cpan/Obuild

	for i in $LIST; do
		loadavg=`uptime | egrep -o 'ges:.*' | awk '{ print $2; }'`
		# bash doesn't understand floating point
		# so convert the number to an integer
		thisloadavg=`echo $loadavg|awk -F \. '{print $1}'`
		if [ "$thisloadavg" -ge "1" ]; then
			echo "Busy - Load Average $loadavg ($thisloadavg) "
			sleep 120
			# Will miss this Perl - catch it next time
			continue
		fi
		echo Mini Smoking $i

		# eval `perlbrew -q exec --with $i perl << 'EOF'
# use Config;
# print "export CFLAGS=\"$Config{ccflags}\"\n";
# print "export LDFLAGS=\"$Config{ldflags}\"\n";
# EOF`
		unset CC CFLAGS LDFLAGS

		if [ -r $HOME/.cpanreporter/$i/config.ini ]; then
			export PERL_CPAN_REPORTER_DIR=$HOME/.cpanreporter/$i
		else
			unset PERL_CPAN_REPORTER_DIR
		fi

		if [ -x /usr/bin/timeout ]; then
			if [[ `perlbrew -q exec --with $i perl -V | fgrep sanitize` ]]; then
				LIMIT=unlimited
			else
				LIMIT=393216
			fi

			timeout -s SIGALRM -k 60s 30m $SHELL -c "ulimit -v $LIMIT; nice perlbrew exec --with $i minismokebox --backend CPAN::Reporter --url $CPAN --perlenv"
		elif [ -x /usr/local/bin/gtimeout ]; then
			# OpenBSD - coreutils package
			if [[ `perlbrew -q exec --with $i perl -V | fgrep sanitize` ]]; then
				LIMIT=unlimited
			else
				LIMIT=393216
			fi

			gtimeout -s SIGALRM -k 60s 30m $SHELL -c "ulimit -v $LIMIT; nice perlbrew exec --with $i minismokebox --backend CPAN::Reporter --url $CPAN --perlenv"
		else
			nice perlbrew exec --with $i minismokebox --backend CPAN::Reporter --url $CPAN --perlenv
		fi
	done

	# nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author nhorne
	# nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^A[N-Z]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^B[A-M]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^B[N-Z]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^C'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^D[A-M]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^D[N-Z]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^[EF]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^G'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^[HI]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^J[A-M]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^J[N-Z]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^K'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^L'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^M[A-M]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^M[N-Z]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^[NO]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^[PQ]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^R[A-M]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^R[N-Z]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^S[A-M]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^S[N-Z]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^T'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^[UVWXY]'
	# # nice perlbrew exec minismokebox --backend CPAN::Reporter --url $CPAN --perlenv --author '^Z'

	# # for i in `perlbrew exec which perl | grep /home`; do nice $i -w -Mstrict /usr/local/bin/minismokebox --backend CPAN::Reporter --url $CPAN --perl $i --perlenv; done
	for i in /usr/local/bin/perl5.*; do nice /usr/local/bin/minismokebox --backend CPAN::Reporter --url $CPAN --perl $i; done
	nice /usr/bin/perl -w -Mstrict /usr/local/bin/minismokebox --perl /usr/bin/perl --backend CPAN::Reporter --url $CPAN

	# if [ `date +%H` -ge 16 ]
	# then
		# sleep 3600
	# else
		sleep 60
	# fi
done

rm -f ${PIDFILE}
