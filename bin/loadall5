#!/usr/bin/env bash

[ -f ~/perl5/perlbrew/etc/bashrc ] || exit 0

if [ x$TMPDIR = 'x' ]; then
	if [[ -d $HOME/tmp ]]; then
		export TMPDIR=$HOME/tmp
	else
		export TMPDIR=/tmp
	fi
fi

typeset -r PIDFILE=${TMPDIR}/cpan-test.pid
if test -s ${PIDFILE} && kill -0 `cat ${PIDFILE}`; then
	# echo "Already running"
	exit 0
fi

# make sure the lockfile is removed when we exit and then claim it
trap "rm -f ${PIDFILE}; exit" INT TERM ALRM EXIT
echo $$ > ${PIDFILE}

# Stage 5
. ~/perl5/perlbrew/etc/bashrc

rm -rf $HOME/.cpan/build/*&

export CPAN_SQLITE_NO_LOG_FILES=1
unset CC CFLAGS LDFLAGS

if [ $1x == x ]; then
	perlbrew switch-off
	LIST=`perlbrew list | awk '{ print $1; }'`
else
	LIST=$*
fi

typeset -r kernel=`uname`

for i in $LIST
do
	if [ ! -d $PERLBREW_ROOT/perls/$i ]; then
		continue
	fi

	perlbrew use $i

	echo $i:

	if [ -r $HOME/.cpanreporter/perl-$i/config.ini ]; then
		export PERL_CPAN_REPORTER_DIR=$HOME/.cpanreporter/perl-$i
	else
		unset PERL_CPAN_REPORTER_DIR
	fi

	if [[ "$kernel" == 'SunOS' ]]; then
		perl -MCPAN -e 'CPAN::Shell->install("Test::Reporter::Transport", "CPAN::Reporter", "CPAN::DistnameInfo", "File::HomeDir", "Unix::Processors", "LWP::Simple", "Config::Auto", "HTTP::Cache::Transparent", "Sys::CpuLoad", "Proc::Killfam", "Sys::LoadAvg", "BSD::Resource", "JSON", "Proc::PID::File", "autodie", "IPC::System::Simple", "File::Spec", "FindBin", "IPC::Run", "Bundle::CPAN::Reporter::Smoker::Tests", "CPAN::Recent::Uploads FindBin")'
	else
		# Workaround for Deep Recursion problem on Linux
		if [[ "$kernel" == 'Linux' ]]; then
			perl -MCPAN -e 'CPAN::Shell->install("App::cpanminus")'
			cpanm -iqn Proc::ProcessTable
		fi
		perl -MCPAN -e 'CPAN::Shell->install("Test::Reporter::Transport", "CPAN::Reporter", "CPAN::DistnameInfo", "Unix::Processors", "LWP::Simple", "Config::Auto", "HTTP::Cache::Transparent", "Proc::Killfam", "Sys::CpuLoad", "Sys::LoadAvg", "BSD::Resource", "JSON", "Proc::PID::File", "File::HomeDir", "Proc::Govern", "autodie", "IPC::System::Simple", "File::Spec", "FindBin", "IPC::Run", "Bundle::CPAN::Reporter::Smoker::Tests", "CPAN::Recent::Uploads FindBin")'
	fi

	# Try again in different order in case one of the above failed
	perl -MCPAN -e 'CPAN::Shell->install("IPC::System::Simple", "autodie", "Proc::Killfam", "LWP::Simple", "Config::Auto", "HTTP::Cache::Transparent", "Unix::Processors", "Proc::PID::File", "Sys::CpuLoad", "BSD::Resource", "Proc::Govern", "CPAN::DistnameInfo")'

	# Create a baseline
	# PERL_CR_SMOKER_RUNONCE=1 perl -MCPAN::Reporter::Smoker -e start
done

rm -f ${PIDFILE}
