#!/usr/bin/env bash

# Test a list of modules in the 'current' perl
# Use our own TMPDIR
# Ensure only one smoker is running at any given time

# set -x
set -e
source $PERLBREW_ROOT/etc/bashrc

if [ -r $HOME/.cpanreporter/$PERLBREW_PERL/config.ini ]; then
	export PERL_CPAN_REPORTER_DIR=$HOME/.cpanreporter/$PERLBREW_PERL
fi

# Docker images have memory limits set elsewhere
if [[ ! -r /proc/1/cgroup ]]; then
	kernel=`uname`
	if [[ "$kernel" != 'FreeBSD' && "$kernel" != 'OpenBSD' && "$kernel" != 'CYGWIN_NT-10.0' && `ulimit -d` = unlimited ]]; then
		ulimit -d 524288
	fi
	if [[ "$kernel" != 'SunOS' && "$kernel" != 'CYGWIN_NT-10.0' && `ulimit -m` = unlimited ]]; then
		ulimit -m 524288
		ulimit -u 256
	fi
	if [[ "$kernel" != 'CYGWIN_NT-10.0' ]]; then
		ulimit -f 300000
	fi
fi

typeset -r NEWTMPDIR=${TMPDIR-/tmp}/testwrapper.$$
typeset -r ID=`id -u`

if [[ -d /run/user/$ID ]]; then
	typeset -r LOCKFILE=/run/user/$ID/testwrapper.lck
else
	typeset -r LOCKFILE=${TMPDIR-/tmp}/testwrapper.lck
fi

if [ -e ${LOCKFILE} ] && kill -0 `cat ${LOCKFILE}`; then
	logger "$0: already running"
	exit
fi

echo $$ > ${LOCKFILE}

mkdir $NEWTMPDIR
chmod 700 $NEWTMPDIR

# make sure the lockfile is removed when we exit and then claim it
trap "rm -fr ${LOCKFILE} ${NEWTMPDIR}; exit" INT TERM EXIT ALRM

TMPDIR=$NEWTMPDIR perl -MCPAN -e "CPAN::Shell->test($*)"
TMPDIR=$NEWTMPDIR perl -MCPAN -e "CPAN::Shell->clean($*)"

exec rm -rf ${NEWTMPDIR} ${LOCKFILE}
